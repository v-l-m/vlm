#!/bin/bash

# Ce script doit être appelé à 2h33 GMT, 8h33 GMT, 14h33 GMT, 20h33 GMT
# Pour contourner les problèmes de changement d'heure, il est appelé toutes les heures
# mais teste si l'heure GMT d'appel est valide
ladate=$( date +%s )
cd /tmp

UPDATEWIND=/data/www/virtual-loup-de-mer.org/html/new-update-wind.php
WGRIB=/usr/local/bin/wgrib
PHP=/opt/php/bin/php


LOG=/tmp/$(date +%Y%m%d_%H:%M)-cronwind.log
BASE_URL=ftp://ftpprd.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/gfs
HH_NOW=$( date -u --date "3 hours ago" +"%H" )
#HH=$( date -u --date "9 hours ago" +"%H" )
# On recherche le multiple de 6 le plus proche de nous (nom du répertoire)
let HH=HH_NOW/6
let HH=HH*6

# Si on est pas sur l'heure ronde, on se tire.
[ $HH_NOW -ne $HH ] && echo "Pas la bonne heure ($HH_NOW contre $HH)" > $LOG && exit

# Si on est sur 0h et 6h, on colle un 0 devant pour respecter la notation 24H
[ $HH -lt 10 ] && HH=0$HH
DATE=$( date +"%Y%m%d" )$HH

VLM_GRIB_DIRNAME=/data/www/grib.virtual-loup-de-mer.org/${DATE}
[ -d $VLM_GRIB_DIRNAME ] || mkdir -p $VLM_GRIB_DIRNAME

# To permit to www-data to copy the gribfile
umask 022


# Downloads (tries to download) a grib file
function download()
{
	# 10 tentatives maxi par fichier
	compteur=0
	until wget --read-timeout=60 ${BASE_URL}.$1/$2 || [ $compteur == 10 ] ; do
		sleep 60
		let compteur++
	done
}

# $1 est le nom du fichier GRIB
function importe ()
{
	# Le fichier s'appelle $1 contient la donnée UV pour la date GribValidity (calculée grace à $2)
	GribDate=$( $WGRIB -s -4yr $1 | head -n 1 | cut -d: -f3 | cut -d= -f2 )
	TimeStamp=$( expr $2 + 0 )
	(( GV = GribDate + TimeStamp ))
	GV=$GV" "
	
	GribValidity=$(date -u --date="${GV:0:8} ${GV:8:2} hours" +%s)
	GribValidity2=$(date -u --date="${GV:0:8} ${GV:8:2} hours" +"%Y%m%d_%H%M")
	echo GribDate=$GribDate TimeStamp=$TimeStamp GV=$GV GribVal=$GribValidity \($GribValidity2\) >> $LOG

	$WGRIB -V $1 -o uwind.tmp -d 1 -text -nh 
	$WGRIB -V $1 -o vwind.tmp -d 2 -text -nh  
	
	# Production des données dans la base
	> grib.$ladate.$$
	# Latitudes
	echo 90 -90 >> grib.$ladate.$$
	# Longitudes
	echo 0 -0.5 >> grib.$ladate.$$
	# GribValidity (ligne en plus par rapport à l'ancien getgrib)
	echo $GribValidity >> grib.$ladate.$$

	# Le contenu du grib (on a désormais uniquement 2 colonnes)
	paste uwind.tmp vwind.tmp  >> grib.$ladate.$$
	
	# Mise en base et nettoyage des anciennes données de plus de 12h
	#echo nice -18 $PHP $UPDATEWIND grib.$ladate.$$ >> $LOG 2>&1 
	nice -18 $PHP $UPDATEWIND grib.$ladate.$$ >> $LOG 2>&1 
	rm -f grib.$ladate.$$ uwind.tmp vwind.tmp

        # On range le fichier GRIB
        mv $1 $VLM_GRIB_DIRNAME/GribFor-$GribValidity2-$1

}

function getnewgrib()
{
	# Determination des fichiers à télécharger
	# Les fichiers à récupérer sont : 03, 06, 09, .. 48 (00 est déjà obsolète, 3 est limite, et 6, on l'a avec le 0 d'il y a 6h..)
	# gfs.tXXz.master.grbf03.10m.uv
	# gfs.tXXz.master.grbf06.10m.uv
	# ...
	
	> $VLM_GRIB_FILENAME
	for TSTAMP in $(seq -f "%02g" 09 3 24) 30 36 42 48 60 72 84 96; do
		Gribfile=gfs.t${HH}z.master.grbf${TSTAMP}.10m.uv
		rm -f $Gribfile
		download $DATE $Gribfile
		echo  $DATE $Gribfile downloaded... >> $LOG

		# mise en base du grib dans la nouvelle grille 
		if [ -f $Gribfile ] ; then
			importe ${Gribfile} ${TSTAMP} 
			mv $Gribfile  $VLM_GRIB_DIRNAME
		fi

	done
	
}


# Main
GMT_HOUR=$HH
case $GMT_HOUR in
   00|06|12|18) 
       nice -18 $PHP $UPDATEWIND >> $LOG 2>&1
       getnewgrib
       ;;
   *)
       nice -18 $PHP $UPDATEWIND -clean >> $LOG 2>&1
       ;;
esac

# Nettoyage des fichiers temporaires
find /data/www/grib.virtual-loup-de-mer.org -mindepth 1 -type d -mtime +2 -exec rm -rf {} \;
find /tmp -type f -name '*cron*' -mtime +3 -exec rm -f {} \;
